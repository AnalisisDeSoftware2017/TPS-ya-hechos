/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package controlpac;

import java.awt.event.KeyEvent;
import java.io.DataOutputStream;
import java.io.FileOutputStream;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrador
 */
public class SituacionPacienteW extends javax.swing.JFrame {

    String codMed=""; // Para guardar el codigo de medico ingresado.
    String codPac=""; //Para guardar el codigo del paciente ingresado.
    String diagMed=""; // Para guardar el diagnostico del médico.
    /**
     * Creates new form SituacionPacienteW
     */
    public SituacionPacienteW() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/iconoCM.png")).getImage()); //Agrego el icono a la ventana
        setSize(575,518); //tamaño de ventana
        setResizable(false); 
        setLocationRelativeTo(null); //La ventana centrada.
        setTitle("Ingreso de Datos"); // Le da un titulo a la ventana.
    }

    public String getCodMed(){
        this.codMed=codigoMed.getText(); // Se obtienen los datos ingresados.
        return codMed;
    }
    
    public String getCodPac(){
        this.codPac=codigoPac.getText(); // Se obtienen los datos ingresados.
        return codPac;
    }
    
    public String getDiagMed(){
        this.diagMed=diagnostico.getText(); // Se obtienen los datos ingresados.
        return diagMed;
    }
    
    public void guardarSitPac(){
        // Esta función guarda el diagnostico del paciente en el archivo de situaciones.
        try {
            DataOutputStream situpac = null;
            // abre el archivo de situacion del paciente para escritura con append habilitado
            situpac = new DataOutputStream(new FileOutputStream(System.getProperty("user.home") + "\\situpac.txt", true));
            // escribe el archivo con el registro
            situpac.writeUTF(EncryptHelper.Encriptar(codPac)); //Se guardan los datos.
            situpac.writeUTF(EncryptHelper.Encriptar(codMed));
            situpac.writeUTF(EncryptHelper.Encriptar(diagMed));
            JOptionPane.showMessageDialog(null, "Datos guardados de forma exitosa"); // Se ha guardado con éxito.            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al intentar abrir el archivo de situaciones de pacientes."); // Se informa un error.
        }  
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigoPac = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        codigoMed = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diagnostico = new javax.swing.JTextArea();
        ingresarBtn = new javax.swing.JButton();
        ant = new javax.swing.JButton();
        borrarC = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        Ira = new javax.swing.JMenu();
        mINI = new javax.swing.JMenuItem();
        mIngDat = new javax.swing.JMenuItem();
        mInf = new javax.swing.JMenuItem();
        opciones = new javax.swing.JMenu();
        Salir = new javax.swing.JMenuItem();
        cerrarSesion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SITUACION  DEL PACIENTE");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 11, 541, 26);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Código del paciente:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 90, 124, 17);
        getContentPane().add(codigoPac);
        codigoPac.setBounds(170, 90, 99, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Código del médico:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(310, 90, 117, 17);
        getContentPane().add(codigoMed);
        codigoMed.setBounds(433, 88, 99, 30);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Diagnóstico del médico"));

        diagnostico.setColumns(20);
        diagnostico.setLineWrap(true);
        diagnostico.setRows(5);
        diagnostico.setWrapStyleWord(true);
        jScrollPane1.setViewportView(diagnostico);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 177, 541, 202);

        ingresarBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ingresarBtn.setText("Ingresar");
        ingresarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarBtnActionPerformed(evt);
            }
        });
        ingresarBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresarBtnKeyTyped(evt);
            }
        });
        getContentPane().add(ingresarBtn);
        ingresarBtn.setBounds(446, 398, 90, 31);

        ant.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ant.setText("Anterior");
        ant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antActionPerformed(evt);
            }
        });
        ant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                antKeyTyped(evt);
            }
        });
        getContentPane().add(ant);
        ant.setBounds(24, 398, 100, 31);

        borrarC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        borrarC.setText("Borrar Campos");
        borrarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarCActionPerformed(evt);
            }
        });
        borrarC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                borrarCKeyTyped(evt);
            }
        });
        getContentPane().add(borrarC);
        borrarC.setBounds(311, 398, 130, 31);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.jpg"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 680, 590);

        jMenu2.setText("Ayuda");
        jMenu2.setToolTipText("");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Manual");
        jMenuItem2.setToolTipText("Vista de guía rápida de uso.");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        Ira.setText("Ir a");

        mINI.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mINI.setText("Menu Inicio");
        mINI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mINIActionPerformed(evt);
            }
        });
        Ira.add(mINI);

        mIngDat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        mIngDat.setText("Ingreso de Datos");
        mIngDat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mIngDatActionPerformed(evt);
            }
        });
        Ira.add(mIngDat);

        mInf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        mInf.setText("Informes");
        mInf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mInfActionPerformed(evt);
            }
        });
        Ira.add(mInf);

        jMenuBar1.add(Ira);

        opciones.setText("Opciones");

        Salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Salir.setText("Salir del Programa");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        opciones.add(Salir);

        cerrarSesion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        cerrarSesion.setText("Cerrar Sesión");
        cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionActionPerformed(evt);
            }
        });
        opciones.add(cerrarSesion);

        jMenuBar1.add(opciones);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void antActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antActionPerformed
        // TODO add your handling code here:
        IngresoPacientesW menu=new IngresoPacientesW();
        menu.setVisible(true); // Vuelve el menu de ingreso de datos
        dispose(); // Desaparece el ingreso de diagnostico.
    }//GEN-LAST:event_antActionPerformed

    private void antKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_antKeyTyped
        // TODO add your handling code here:
                // Creamos un evento para que cuando se presione la tecla Enter sea como presionar el botón.
        //******************************************************************************************
        char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            ant.doClick();
        }// fin del if.
    }//GEN-LAST:event_antKeyTyped

    private void ingresarBtnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresarBtnKeyTyped
        // TODO add your handling code here:
                // Creamos un evento para que cuando se presione la tecla Enter sea como presionar el botón.
        //******************************************************************************************
        char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            ingresarBtn.doClick();
        }// fin del if.
    }//GEN-LAST:event_ingresarBtnKeyTyped

    private void borrarCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borrarCKeyTyped
        // TODO add your handling code here:
                char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            borrarC.doClick();
        }// fin del if.
    }//GEN-LAST:event_borrarCKeyTyped

    private void borrarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarCActionPerformed
        // TODO add your handling code here:
        codigoPac.setText(""); //Limpio todos los campos.
        codigoMed.setText("");
        diagnostico.setText("");
    }//GEN-LAST:event_borrarCActionPerformed

    private void ingresarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarBtnActionPerformed
        // TODO add your handling code here:
        int errores=0; //Para contabilizar los erroes.
        String msj=""; //Para mostrar mensajes de error.
        getCodPac(); //Obtengo los datos ingresados.
        getCodMed();
        getDiagMed();
        DatosPacienteW paciente=new DatosPacienteW(this.codPac); //Simulo haber creado un paciente para usar los métodos de paciente.
        DatosMedicoW medico=new DatosMedicoW(this.codMed); // Igual que lo anterior, el objetivo es usar los métodos de médico.
        if(!paciente.ExistePac()){ //Si el paciente no existe.
            msj="El código de paciente ingresado no existe. ";
            errores++;// Hay un error.
        }
        if(!medico.medicoExiste()){ // Si el médico no existe.
            msj= msj + "El código del médico ingresado no existe. ";
            errores++; //Hay un error.
        }
        if(this.diagMed.equals("")){
            msj= msj + "Por favor, ingrese el diagnóstico.";
            errores++; //Hay un error.
        }
        if(errores!=0)
            JOptionPane.showMessageDialog(null, msj); // Había errores, por lo tanto se muestra un mensaje y no se guarda.
        else
            guardarSitPac(); //Sin errores entonces se guardan los datos.         
    }//GEN-LAST:event_ingresarBtnActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        ManualW guiaRapida=new ManualW();
        guiaRapida.setVisible(true);
        setTitle("Manual de Ayuda");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mINIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mINIActionPerformed
        // TODO add your handling code here:
        MainW menu=new MainW();
        menu.setVisible(true); // Vuelve el menu proncipal
        dispose(); // Desaparece el informes.
    }//GEN-LAST:event_mINIActionPerformed

    private void mInfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mInfActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        InformesW iw=new InformesW();
        iw.setVisible(true); // Hago visible la ventana de Informes.
        dispose(); // Desaparece el menu.
    }//GEN-LAST:event_mInfActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
        System.exit(0); // SE SALE DEL PROGRAMA.
    }//GEN-LAST:event_SalirActionPerformed

    private void cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionActionPerformed
        // TODO add your handling code here:
        Login log=new Login(); // Abre el log principal del sistema.
        log.setVisible(true); // Hace visible el log.
        dispose();//SE OCULTA
    }//GEN-LAST:event_cerrarSesionActionPerformed

    private void mIngDatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mIngDatActionPerformed
        // TODO add your handling code here:
        IngresoPacientesW ipw=new IngresoPacientesW();
        ipw.setVisible(true); // Hago visible la ventana de pacientes.    
        dispose(); // Para que se oculte el menu.         
        dispose(); // Desaparece el informes.
    }//GEN-LAST:event_mIngDatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SituacionPacienteW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SituacionPacienteW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SituacionPacienteW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SituacionPacienteW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SituacionPacienteW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Ira;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JButton ant;
    private javax.swing.JButton borrarC;
    private javax.swing.JMenuItem cerrarSesion;
    private javax.swing.JTextField codigoMed;
    private javax.swing.JTextField codigoPac;
    private javax.swing.JTextArea diagnostico;
    private javax.swing.JButton ingresarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mINI;
    private javax.swing.JMenuItem mInf;
    private javax.swing.JMenuItem mIngDat;
    private javax.swing.JMenu opciones;
    // End of variables declaration//GEN-END:variables
}
