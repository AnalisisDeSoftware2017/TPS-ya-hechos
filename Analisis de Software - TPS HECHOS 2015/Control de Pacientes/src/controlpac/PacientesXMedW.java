/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package controlpac;

import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrador
 */
public class PacientesXMedW extends javax.swing.JFrame {
    
    String codMed="";
    String nomMed="";
    
    String codm=""; // En estas variables vamos a guardar los datos de la búsqueda del medico.
    String nomm="";
    String espm="";
    String codp="";// Estas variables que siguen nos ayudan en la búsqueda de datos del médico.
    String codme="";
    String enfp="";
    String codpa="";// Nos sirven para la lectura de pacientes.
    String nompa="";
    String checkPaciente=""; //Para que no se un mismo paciente en la lista, ya que puede tener muchos diagnosticos.
    String lista=""; // Limpio la lista de pacientes a mostrar.
    /**
     * Creates new form PacientesXMedW
     */
    public PacientesXMedW() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/iconoCM.png")).getImage()); //Agrego el icono a la ventana
        setSize(575,518); //tamañano de ventana
        setResizable(false); // que no la puedan cerrar
        setLocationRelativeTo(null);
        setTitle("Informes"); // Le da un titulo a la ventana.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPac = new javax.swing.JTextArea();
        ant = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nombreMed = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        codigoMed = new javax.swing.JTextField();
        consultarBtn = new javax.swing.JButton();
        borrarC = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mINI = new javax.swing.JMenuItem();
        mIngDat = new javax.swing.JMenuItem();
        mInf = new javax.swing.JMenuItem();
        opciones = new javax.swing.JMenu();
        Salir = new javax.swing.JMenuItem();
        cerrarSesion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html><u>Pacientes por médico</u></html>");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 11, 544, 26);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pacientes atendidos:"));

        listaPac.setEditable(false);
        listaPac.setColumns(20);
        listaPac.setRows(5);
        jScrollPane1.setViewportView(listaPac);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 215, 517, 169);

        ant.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ant.setText("Anterior");
        ant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antActionPerformed(evt);
            }
        });
        ant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                antKeyTyped(evt);
            }
        });
        getContentPane().add(ant);
        ant.setBounds(20, 402, 120, 33);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nombre del médico:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(253, 189, 123, 17);

        nombreMed.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreMed.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        nombreMed.setEnabled(false);
        nombreMed.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        nombreMed.setSelectionColor(new java.awt.Color(204, 204, 204));
        getContentPane().add(nombreMed);
        nombreMed.setBounds(380, 188, 150, 21);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Cógido del médico:");

        codigoMed.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        codigoMed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoMedKeyTyped(evt);
            }
        });

        consultarBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        consultarBtn.setText("Consultar");
        consultarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarBtnActionPerformed(evt);
            }
        });
        consultarBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                consultarBtnKeyTyped(evt);
            }
        });

        borrarC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        borrarC.setText("Borrar");
        borrarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarCActionPerformed(evt);
            }
        });
        borrarC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                borrarCKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(codigoMed, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(245, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(consultarBtn)
                .addGap(18, 18, 18)
                .addComponent(borrarC, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(codigoMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consultarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrarC, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(20, 43, 544, 127);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.jpg"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 700, 570);

        jMenu2.setText("Ayuda");
        jMenu2.setToolTipText("");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Manual");
        jMenuItem2.setToolTipText("Vista de guía rápida de uso.");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ir a");

        mINI.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mINI.setText("Menu Inicio");
        mINI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mINIActionPerformed(evt);
            }
        });
        jMenu3.add(mINI);

        mIngDat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        mIngDat.setText("Ingreso de Datos");
        mIngDat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mIngDatActionPerformed(evt);
            }
        });
        jMenu3.add(mIngDat);

        mInf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        mInf.setText("Informes");
        mInf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mInfActionPerformed(evt);
            }
        });
        jMenu3.add(mInf);

        jMenuBar1.add(jMenu3);

        opciones.setText("Opciones");

        Salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Salir.setText("Salir del Programa");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        opciones.add(Salir);

        cerrarSesion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        cerrarSesion.setText("Cerrar Sesión");
        cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionActionPerformed(evt);
            }
        });
        opciones.add(cerrarSesion);

        jMenuBar1.add(opciones);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void consulta3(){
        try{
           DataInputStream datopac = null;
           datopac = new DataInputStream(new FileInputStream(System.getProperty("user.home") + "\\datopac.txt")); //abre el archivo de pacientes para lectura
           int sw1 = 1;
           while (sw1 != 0) {
             try { // lee el registro
                 codpa = EncryptHelper.Desencriptar(datopac.readUTF());
                 nompa = EncryptHelper.Desencriptar(datopac.readUTF());
                 if (codpa.equals(codp) && checkPaciente.indexOf(codpa)==-1){ //compara el codigo del paciente de la tabla "situpac" con el codigo del paciente de la tabla "datopac"
                 // Hacemos checkPaciente.indexOf(codpa)==-1 para evitar duplicados de pacientes mostrados en al lista. Devuelve -1 si no existe en la lista.
                     checkPaciente= checkPaciente +"#"+ codp; // uso el signo # para separar los codigos ya encontrados para listar.
                     lista = lista + nompa + "\n"; //Acumulo en la lista
                 }
               } catch (Exception e) {
                    sw1 = 0;
                  }
            }    
        }catch(IOException ioe){
           JOptionPane.showMessageDialog(null, "No se ha encontrado información sobre el médico solicitado."); // ERROR
        }
    }
    public void consulta2(){
    try{
    DataInputStream situpac = null; // Preparo para abrir el archivo de pacientes.
    situpac = new DataInputStream(new FileInputStream(System.getProperty("user.home") + "\\situpac.txt")); //abre el archivo de situacion del paciente para lectura
    int sw = 1; // Bandera para nueva búsqueda.
    while (sw != 0) {
       try { // lee el registro
       codp = EncryptHelper.Desencriptar(situpac.readUTF());
       codme = EncryptHelper.Desencriptar(situpac.readUTF());
       enfp = EncryptHelper.Desencriptar(situpac.readUTF());
       if (codme.equals(codMed)) { //compara el codigo medico de la tabla "datomed"  con el de la tabla "situpac"
            consulta3();
        }
      } catch (Exception e) {
         sw = 0;
        }
    }
    }catch(IOException ioe){
        JOptionPane.showMessageDialog(null, "No se ha encontrado información sobre el médico solicitado."); // ERROR
    }
}
    
    public void consultarPacientes(){

        try {
            DataInputStream datomed = null; //Para luego abrir el archivo de medicos.
            datomed = new DataInputStream(new FileInputStream(System.getProperty("user.home") + "\\datomed.txt")); // abre el archivo de datos de los medicos para lectura
            boolean found = false; // Nos va a servir para saber si encontramos al médico.
            int sw = 1; //Bandera para la búsqueda.
            while (sw != 0) {
                try { // lee un registro
                    codm = EncryptHelper.Desencriptar(datomed.readUTF());
                    nomm = EncryptHelper.Desencriptar(datomed.readUTF());
                    espm = EncryptHelper.Desencriptar(datomed.readUTF());
                } catch (Exception e) {
                    sw = 0;
                }
                if (codm.equals(codMed)){ //compara el codigo extraido de la tabla "datomed" con el codigo ingresado
                    found = true; // ENCONTRADO.
                    nombreMed.setText(nomm); // Hacemos que aparezca el nombre del médico.
                    consulta2(); // hago otra consulta sobre le archivo de situacion de pacientes.
                }
            }
            if (!found) { // si el medico no se encontro se informa
                JOptionPane.showMessageDialog(null, "No se ha encontrado información sobre el médico solicitado.");
            }else
                listaPac.setText(lista); //Mestro la lista                
        } catch (IOException ioe) {
            JOptionPane.showMessageDialog(null, "No se ha encontrado información sobre el médico solicitado.");
        };
    }
    private void antActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antActionPerformed
        // TODO add your handling code here:
        InformesW menu=new InformesW();
        menu.setVisible(true); // Vuelve el menu de informes
        dispose(); // Desaparece el informe de pacientes por medico.
    }//GEN-LAST:event_antActionPerformed

    private void antKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_antKeyTyped
        // TODO add your handling code here:
                // Creamos un evento para que cuando se presione la tecla Enter sea como presionar el botón.
        //******************************************************************************************
        char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            ant.doClick();
        }// fin del if.
    }//GEN-LAST:event_antKeyTyped

    private void borrarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarCActionPerformed
        // TODO add your handling code here:
        codigoMed.setText(""); // Limpio los datos.
        nombreMed.setText("");
        listaPac.setText("");
        
    }//GEN-LAST:event_borrarCActionPerformed

    private void borrarCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borrarCKeyTyped
        // TODO add your handling code here:
                char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            borrarC.doClick();
        }// fin del if.
    }//GEN-LAST:event_borrarCKeyTyped

    private void consultarBtnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consultarBtnKeyTyped
        // TODO add your handling code here:
                char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            consultarBtn.doClick();
        }// fin del if.
    }//GEN-LAST:event_consultarBtnKeyTyped

    private void consultarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarBtnActionPerformed
        // TODO add your handling code here:
        this.codMed=codigoMed.getText(); // Sería un getCodMed();
        lista="";
        checkPaciente="";
        listaPac.setText(""); // limpio para mostrar uno nuevo.
        DatosMedicoW medico=new DatosMedicoW(codMed); // Creo un medico para usar el metodo que verifique que existe.
        if(!medico.medicoExiste()){ //Si no existe.
            JOptionPane.showMessageDialog(null, "Código de médico inexistente.");//Muestro error.
        }else
            consultarPacientes(); // Existe el médico, enotnces muestro los pacientes si es que tiene.
    }//GEN-LAST:event_consultarBtnActionPerformed

    private void codigoMedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoMedKeyTyped
        // TODO add your handling code here:
                // TODO add your handling code here:
                char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            consultarBtn.doClick();
        }// fin del if.
    }//GEN-LAST:event_codigoMedKeyTyped

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        ManualW guiaRapida=new ManualW();
        guiaRapida.setVisible(true);
        setTitle("Manual de Ayuda");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mINIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mINIActionPerformed
        // TODO add your handling code here:
        MainW menu=new MainW();
        menu.setVisible(true); // Vuelve el menu proncipal
        dispose(); // Desaparece el informes.
    }//GEN-LAST:event_mINIActionPerformed

    private void mInfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mInfActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        InformesW iw=new InformesW();
        iw.setVisible(true); // Hago visible la ventana de Informes.
        dispose(); // Desaparece el menu.
    }//GEN-LAST:event_mInfActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
        System.exit(0); // SE SALE DEL PROGRAMA.
    }//GEN-LAST:event_SalirActionPerformed

    private void cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionActionPerformed
        // TODO add your handling code here:
        Login log=new Login(); // Abre el log principal del sistema.
        log.setVisible(true); // Hace visible el log.
        dispose();//SE OCULTA
    }//GEN-LAST:event_cerrarSesionActionPerformed

    private void mIngDatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mIngDatActionPerformed
        // TODO add your handling code here:
        IngresoPacientesW ipw=new IngresoPacientesW();
        ipw.setVisible(true); // Hago visible la ventana de pacientes.    
        dispose(); // Para que se oculte el menu.
    }//GEN-LAST:event_mIngDatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PacientesXMedW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PacientesXMedW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PacientesXMedW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PacientesXMedW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PacientesXMedW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Salir;
    private javax.swing.JButton ant;
    private javax.swing.JButton borrarC;
    private javax.swing.JMenuItem cerrarSesion;
    private javax.swing.JTextField codigoMed;
    private javax.swing.JButton consultarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea listaPac;
    private javax.swing.JMenuItem mINI;
    private javax.swing.JMenuItem mInf;
    private javax.swing.JMenuItem mIngDat;
    private javax.swing.JTextField nombreMed;
    private javax.swing.JMenu opciones;
    // End of variables declaration//GEN-END:variables
}
