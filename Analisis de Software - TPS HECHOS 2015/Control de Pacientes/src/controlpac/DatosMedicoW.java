/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package controlpac;

import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrador
 */
public class DatosMedicoW extends javax.swing.JFrame {

    String codigoMed=""; //Para guardar el nombre del medico ingresado.
    String nombreMed=""; //Para guardar el codigo del medico ingresado.
    String especialidadMed="";//Para guardar la especialidad del medico ingresado.
    /**
     * Creates new form DatosMedicoW
     */
    public DatosMedicoW() { // Constructor 1
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/iconoCM.png")).getImage()); //Agrego el icono a la ventana
        setSize(500,400); 
        setLocationRelativeTo(null); // En el centro la ventana.
        setResizable(false); // Anula poder maximizar la ventana.
        setTitle("Ingreso de Datos"); // Le da un titulo a la ventana.
    }
    
     public DatosMedicoW(String codigo) { // Constructor 2 para crear un medico desde otras clases
        this.codigoMed=codigo;
        //Sólo cargamos el dato básico para poder usar los metodos de medico.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        anterior = new javax.swing.JButton();
        ingresarBtn = new javax.swing.JButton();
        borrarC = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        especialidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mINI = new javax.swing.JMenuItem();
        mIngDat = new javax.swing.JMenuItem();
        mInf = new javax.swing.JMenuItem();
        opciones = new javax.swing.JMenu();
        Salir = new javax.swing.JMenuItem();
        cerrarSesion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DATOS DEL MÉDICO");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 11, 457, 26);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Código:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(53, 84, 54, 17);

        codigo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoKeyTyped(evt);
            }
        });
        getContentPane().add(codigo);
        codigo.setBounds(125, 83, 93, 21);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(53, 123, 54, 17);

        nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreKeyTyped(evt);
            }
        });
        getContentPane().add(nombre);
        nombre.setBounds(125, 122, 157, 21);

        anterior.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        anterior.setText("Anterior");
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });
        anterior.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                anteriorKeyTyped(evt);
            }
        });
        getContentPane().add(anterior);
        anterior.setBounds(26, 253, 110, 33);

        ingresarBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ingresarBtn.setText("Ingresar");
        ingresarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarBtnActionPerformed(evt);
            }
        });
        ingresarBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresarBtnKeyTyped(evt);
            }
        });
        getContentPane().add(ingresarBtn);
        ingresarBtn.setBounds(350, 200, 120, 30);

        borrarC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        borrarC.setText("Borrar Campos");
        borrarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarCActionPerformed(evt);
            }
        });
        borrarC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                borrarCKeyTyped(evt);
            }
        });
        getContentPane().add(borrarC);
        borrarC.setBounds(170, 200, 170, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Especialidad:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 162, 77, 17);

        especialidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        especialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                especialidadKeyTyped(evt);
            }
        });
        getContentPane().add(especialidad);
        especialidad.setBounds(125, 161, 157, 21);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 520, 350);

        jMenu2.setText("Ayuda");
        jMenu2.setToolTipText("");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Manual");
        jMenuItem2.setToolTipText("Vista de guía rápida de uso.");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ir a");

        mINI.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mINI.setText("Menu Inicio");
        mINI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mINIActionPerformed(evt);
            }
        });
        jMenu3.add(mINI);

        mIngDat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        mIngDat.setText("Ingreso de Datos");
        mIngDat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mIngDatActionPerformed(evt);
            }
        });
        jMenu3.add(mIngDat);

        mInf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        mInf.setText("Informes");
        mInf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mInfActionPerformed(evt);
            }
        });
        jMenu3.add(mInf);

        jMenuBar1.add(jMenu3);

        opciones.setText("Opciones");

        Salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Salir.setText("Salir del Programa");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        opciones.add(Salir);

        cerrarSesion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        cerrarSesion.setText("Cerrar Sesión");
        cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionActionPerformed(evt);
            }
        });
        opciones.add(cerrarSesion);

        jMenuBar1.add(opciones);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String getCodigoMed(){
        this.codigoMed=codigo.getText(); //Guarda el codigo ingresado.
        return codigoMed;
    }    
    
    public String getNombreMed(){
        this.nombreMed=nombre.getText(); //Guarda el nombre Ingresado.
        return nombreMed;
    }
    
    public String getEspecialidadMed(){
        this.especialidadMed=especialidad.getText();
        return especialidadMed;
    }
    
    private static boolean soloLetras(String cadena){
      if(cadena.matches("[áéíóúña-zÑÁÉÍÓÚA-Z][áéíóúña-zÁÉÍÓÚÑA-z ]*")) // Se valida en esta función que no puede ser vacía la cadena.
        return true; //Son letras.
      else
        return false; //No son letras.
    }

    private static boolean alfanumerico(String cadena){
      if(cadena.matches("[0-9a-zA-z]+")) // Tampoco puede ser vacía una cadena.
        return true; // Es alfanimerico
      else
        return false; //No es alfanumerico
    }
    
    public int validarDatosMed(){
        String mensaje="";
        int ret=0; // comienza siendo valido.
        if(!alfanumerico(codigoMed)){ // El codigo del paciente debe ser alfanumerico sin espacios.
                mensaje="El código no es válido o no se ha ingresado. "; //Se guarda mensaje de aviso.
                ret++; //Ret se incrementa porque ya no es valido.
        }
        if(!soloLetras(nombreMed)){ // El nombre del paciente sólo debe contener letras.
         mensaje= mensaje + "El nombre del médico posee caracteres incorrectos o no se ha ingresado. "; //Se guarda mensaje de aviso.
         ret++; // Ret deja de ser valido.
        }
          if(!soloLetras(especialidadMed)){ // El nombre del paciente sólo debe contener letras.
         mensaje= mensaje + "La especialidad del médico posee caracteres incorrectos o no se ha ingresado"; //Se guarda mensaje de aviso.
         ret++; // Ret deja de ser valido.
        }
        if(ret!=0)
            JOptionPane.showMessageDialog(null, mensaje);
        return ret; // Correctos o Incorrectos.
    }
    
    public boolean medicoExiste() {
        int sw1 = 1; 
        boolean found = false; //Contiene el resultado de la busqueda.
        try {
            DataInputStream datomedInput = null; // Luego abrimos el archivo de medicos.
            datomedInput = new DataInputStream(new FileInputStream(System.getProperty("user.home") + "\\datomed.txt")); // abre el archivo de medicos para lectura
            while (sw1 != 0) { //Bandera para la busqueda.
                String codm = EncryptHelper.Desencriptar(datomedInput.readUTF());// lee el registro
                datomedInput.readUTF(); 
                datomedInput.readUTF();
                if (codm.equals(codigoMed)) {
                    /*compara el codigo digitado con el codigo del medico de la
                     tabla "datomed" */
                    found = true; //ENCONTRADO
                }
            }
        } catch (Exception e) {
            sw1 = 0;
        }
        return found; // Encontrado o no encontrado.
 }
    
 public void grabarDatosMed(){
     try { // Esta función se encarga de grabar los datos en el archivo de medicos.
            DataOutputStream datomed = null; // abre el archivo para escritura con append habilitado
            datomed = new DataOutputStream(new FileOutputStream(System.getProperty("user.home") + "\\datomed.txt", true));
            //escribe el archivo con los datos ingresados
             datomed.writeUTF(EncryptHelper.Encriptar(codigoMed));
             datomed.writeUTF(EncryptHelper.Encriptar(nombreMed));
             datomed.writeUTF(EncryptHelper.Encriptar(especialidadMed));
             JOptionPane.showMessageDialog(null, "Datos guardados de forma exitosa."); // Se han guardado correctamente los datos.
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Error al intentar abrir el archivo de médicos"); // Error inesperado al abrir el arhivo.
        };
     
 }
    
    
    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        // TODO add your handling code here:
        IngresoPacientesW menu=new IngresoPacientesW();
        menu.setVisible(true); // Vuelve el menu de ingreso de datos
        dispose(); // Desaparece el ingreso de datos de medico.
    }//GEN-LAST:event_anteriorActionPerformed

    private void ingresarBtnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresarBtnKeyTyped
        // TODO add your handling code here:
                // Creamos un evento para que cuando se presione la tecla Enter sea como presionar el botón.
        //******************************************************************************************
        char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            ingresarBtn.doClick();
        }// fin del if.
    }//GEN-LAST:event_ingresarBtnKeyTyped

    private void anteriorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anteriorKeyTyped
        // TODO add your handling code here:
                // Creamos un evento para que cuando se presione la tecla Enter sea como presionar el botón.
        //******************************************************************************************
        char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            anterior.doClick();
        }// fin del if.
    }//GEN-LAST:event_anteriorKeyTyped

    private void borrarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarCActionPerformed
        // TODO add your handling code here:
        codigo.setText(""); // Se borra el contenido del codigo del medico.
        nombre.setText(""); // Se borra el contenido del nombre de medico.
        especialidad.setText(""); // Se borra el contenido de la especialidad.
    }//GEN-LAST:event_borrarCActionPerformed

    private void borrarCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borrarCKeyTyped
        // TODO add your handling code here:
        char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón (dar click)
            borrarC.doClick();
        }// fin del if.
    }//GEN-LAST:event_borrarCKeyTyped

    private void ingresarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarBtnActionPerformed
        // TODO add your handling code here:
        getCodigoMed(); //Obtenemos el codigo del medico ingresado.
        getNombreMed(); // Obtenemos el nombre del medico ingresado.
        getEspecialidadMed(); // Obtenemos la especialidad del medico.
        if(validarDatosMed()==0){ // Si los datos estan bien ingresados, verifico la existencia del medico.
          if(!medicoExiste()) // Si el medico no está registrado en el archivo entonces lo agrego.
            grabarDatosMed(); //Se guardan los datos ingresados en el archivo.
          else
           JOptionPane.showMessageDialog(null, "El código del médico ya existe."); //Se informa que el medico ya existe.
        }   
    }//GEN-LAST:event_ingresarBtnActionPerformed

    private void especialidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_especialidadKeyTyped
        // TODO add your handling code here:
                char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón ingresar datos (dar click)
            ingresarBtn.doClick();
        }// fin del if.
    }//GEN-LAST:event_especialidadKeyTyped

    private void nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyTyped
        // TODO add your handling code here:
                char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón ingresar datos(dar click)
            ingresarBtn.doClick();
        }// fin del if.
    }//GEN-LAST:event_nombreKeyTyped

    private void codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoKeyTyped
        // TODO add your handling code here:
                char cTeclaPresionada=evt.getKeyChar();
        // da click al detectar la tecla ENTER.
        if(cTeclaPresionada==KeyEvent.VK_ENTER){
            //Ejecuta el botón ingresar datos(dar click)
            ingresarBtn.doClick();
        }// fin del if.
    }//GEN-LAST:event_codigoKeyTyped

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        ManualW guiaRapida=new ManualW();
        guiaRapida.setVisible(true);
        setTitle("Manual de Ayuda");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mINIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mINIActionPerformed
        // TODO add your handling code here:
        MainW menu=new MainW();
        menu.setVisible(true); // Vuelve el menu proncipal
        dispose(); // Desaparece el informes.
    }//GEN-LAST:event_mINIActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
        System.exit(0); // SE SALE DEL PROGRAMA.
    }//GEN-LAST:event_SalirActionPerformed

    private void cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionActionPerformed
        // TODO add your handling code here:
        Login log=new Login(); // Abre el log principal del sistema.
        log.setVisible(true); // Hace visible el log.
        dispose();//SE OCULTA
    }//GEN-LAST:event_cerrarSesionActionPerformed

    private void mInfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mInfActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        InformesW iw=new InformesW();
        iw.setVisible(true); // Hago visible la ventana de Informes.
        dispose(); // Desaparece el menu.
    }//GEN-LAST:event_mInfActionPerformed

    private void mIngDatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mIngDatActionPerformed
        // TODO add your handling code here:
                IngresoPacientesW ipw=new IngresoPacientesW();
        ipw.setVisible(true); // Hago visible la ventana de pacientes.    
        dispose(); // Para que se oculte el menu.
    }//GEN-LAST:event_mIngDatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatosMedicoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatosMedicoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatosMedicoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatosMedicoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatosMedicoW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Salir;
    private javax.swing.JButton anterior;
    private javax.swing.JButton borrarC;
    private javax.swing.JMenuItem cerrarSesion;
    private javax.swing.JTextField codigo;
    private javax.swing.JTextField especialidad;
    private javax.swing.JButton ingresarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem mINI;
    private javax.swing.JMenuItem mInf;
    private javax.swing.JMenuItem mIngDat;
    private javax.swing.JTextField nombre;
    private javax.swing.JMenu opciones;
    // End of variables declaration//GEN-END:variables
}
